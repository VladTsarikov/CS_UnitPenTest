using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;

namespace UnitPenTestProject
{
    [TestClass]
    public class PenTest
    {
        private Pen pen;
        //static PenTestData penTestData = new PenTestData();
        //private File file;
        //private String FILE_PATH = "src/test/resources/color.txt";

        /*
             [ClassInitialize]
             public static void Initialize()
             {
                 penTestData = new PenTestData();
             }

        [ClassCleanup]
        public static void TearDown()
        {
        pen = null;
        }
        */
        //PenTestData penTestData = new PenTestData();


        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetMethoWritedData), DynamicDataSourceType.Method)]
        public void TestPenWrite_shouldWriteCorrectValue(String word, int inkContainerValue, double sizeLetter, String color, String expectedValue)
        {
            pen = new Pen(inkContainerValue, sizeLetter, color);
            Assert.AreEqual(pen.write(word), expectedValue);
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetMethodWriteIncorrectData), DynamicDataSourceType.Method)]
        public void TestPenWrite_shouldVerifyForNull(String word, int inkContainerValue, double sizeLetter, String color)
        {
            pen = new Pen(inkContainerValue, sizeLetter, color);
            pen.write(word);
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetThirdConstructorData), DynamicDataSourceType.Method)]
        public void TestPenGetColor_shouldGetColor(int inkContainerValue, double sizeLetter,
                                                   String color)
        {
            pen = new Pen(inkContainerValue, sizeLetter, color);
            Assert.AreEqual(pen.getColor(), color);
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetDataForMethodIsWork), DynamicDataSourceType.Method)]
        public void TestPenIsWork_shouldWork(int inkContainerValue)
        {
            pen = new Pen(inkContainerValue);
            Assert.IsTrue(pen.isWork());
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetIncorrectDataForMethodIsWork), DynamicDataSourceType.Method)]
        public void TestPenIsWork_shouldNotWork(int inkContainerValue)
        {
            pen = new Pen(inkContainerValue);
            Assert.IsFalse(pen.isWork());
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetThirdConstructorData), DynamicDataSourceType.Method)]
        public void TestPenDoSomethingElse_shouldWriteToConsole(int inkContainerValue, double sizeLetter, String color)
        {
            pen = new Pen(inkContainerValue, sizeLetter, color);
            /*
            file = new File(FILE_PATH);
            String absolutePath = file.getCanonicalPath();
            PrintStream st = new PrintStream(new FileOutputStream(new File(absolutePath)));
            System.setErr(st);
            System.setOut(st);
            pen.doSomethingElse();
            FileReader fr = new FileReader(absolutePath);
            Scanner scan = new Scanner(fr);
            String actualColor = scan.nextLine();
            if (actualColor.equals("null"))
           {
                actualColor = null;
            }

            fr.close();
            Assert.AreEqual(actualColor, color);
              */
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetFirstConstructorData), DynamicDataSourceType.Method)]
        public void TestFirstConstructor_shouldCreateObject(int inkContainerValue)
        {
            Pen pen = new Pen(inkContainerValue);
            Assert.IsNotNull(pen);
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetSecondConstructorData), DynamicDataSourceType.Method)]
        public void TestSecondConstructor__shouldCreateObject(int inkContainerValue,
                                                            double sizeLetter)
        {
            Pen pen = new Pen(inkContainerValue, sizeLetter);
            Assert.IsNotNull(pen);
        }

        [DataTestMethod]
        [DynamicData(nameof(PenTestData.GetThirdConstructorData), DynamicDataSourceType.Method)]
        public void TestThirdConstructor__shouldCreateObject(int inkContainerValue,
                                                             double sizeLetter,
                                                             String color)
        {
            Pen pen = new Pen(inkContainerValue, sizeLetter, color);
            Assert.IsNotNull(pen);
        }
    }
}
